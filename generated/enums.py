# Generated by ariadne-codegen
# Source: https://ilovebacon.app.spacelift.dev/graphql

from enum import Enum


class APIKeyType(str, Enum):
    SECRET = "SECRET"
    OIDC = "OIDC"


class AccountType(str, Enum):
    UNKNOWN = "UNKNOWN"
    USER = "USER"
    ORG = "ORG"


class AspectGranularity(str, Enum):
    DAY = "DAY"
    WEEK = "WEEK"
    MONTH = "MONTH"
    YEAR = "YEAR"


class AspectType(str, Enum):
    RUN_MINUTES = "RUN_MINUTES"
    WORKERS_COUNT = "WORKERS_COUNT"


class AuthorizationScheme(str, Enum):
    LOGIN_POLICIES = "LOGIN_POLICIES"
    MANAGED_USERS = "MANAGED_USERS"


class BillableRunState(str, Enum):
    INITIALIZING = "INITIALIZING"
    PLANNING = "PLANNING"
    APPLYING = "APPLYING"
    PERFORMING = "PERFORMING"
    DESTROYING = "DESTROYING"
    PREPARING = "PREPARING"
    PREPARING_APPLY = "PREPARING_APPLY"
    PREPARING_REPLAN = "PREPARING_REPLAN"


class BillingTier(str, Enum):
    FREE = "FREE"
    CLOUD = "CLOUD"
    ENTERPRISE = "ENTERPRISE"
    V3_FREE = "V3_FREE"
    V3_CLOUD = "V3_CLOUD"


class BillingTierFeature(str, Enum):
    ACCESS_POLICIES = "ACCESS_POLICIES"
    API_KEYS = "API_KEYS"
    API_KEYS_OIDC = "API_KEYS_OIDC"
    AUDIT_WEBHOOKS = "AUDIT_WEBHOOKS"
    CAN_UPDATE_SSO_SAML = "CAN_UPDATE_SSO_SAML"
    CLOUD_CREDENTIAL_GENERATION = "CLOUD_CREDENTIAL_GENERATION"
    CUSTOM_SSO = "CUSTOM_SSO"
    CUSTOM_SSO_OIDC = "CUSTOM_SSO_OIDC"
    CUSTOM_SSO_SAML = "CUSTOM_SSO_SAML"
    MFA = "MFA"
    MULTIPLE_VCS = "MULTIPLE_VCS"
    NOTIFICATION_POLICIES = "NOTIFICATION_POLICIES"
    PRIVATE_MODULE_SHARING = "PRIVATE_MODULE_SHARING"
    PRIVATE_VCS = "PRIVATE_VCS"
    PRIVATE_WORKERS = "PRIVATE_WORKERS"
    RUN_STATE_CHANGE_WEBHOOKS = "RUN_STATE_CHANGE_WEBHOOKS"
    SESSION_MANAGEMENT = "SESSION_MANAGEMENT"
    SLACK_INTEGRATION = "SLACK_INTEGRATION"
    TERRAFORM_PROVIDER_VERSIONS = "TERRAFORM_PROVIDER_VERSIONS"
    WORKFLOW_OPTIMIZATION = "WORKFLOW_OPTIMIZATION"
    WORKFLOW_POLICIES = "WORKFLOW_POLICIES"


class BlueprintFormat(str, Enum):
    UNKNOWN = "UNKNOWN"
    YAML = "YAML"


class BlueprintInputType(str, Enum):
    SHORT_TEXT = "SHORT_TEXT"
    LONG_TEXT = "LONG_TEXT"
    SECRET = "SECRET"
    SELECT = "SELECT"
    BOOLEAN = "BOOLEAN"
    NUMBER = "NUMBER"
    FLOAT = "FLOAT"


class BlueprintState(str, Enum):
    UNKNOWN = "UNKNOWN"
    DRAFT = "DRAFT"
    PUBLISHED = "PUBLISHED"
    DELETED = "DELETED"


class ConfigType(str, Enum):
    ENVIRONMENT_VARIABLE = "ENVIRONMENT_VARIABLE"
    FILE_MOUNT = "FILE_MOUNT"


class EntityChangePhase(str, Enum):
    DRIFT = "DRIFT"
    PLAN = "PLAN"
    APPLY = "APPLY"


class EntityChangeResult(str, Enum):
    PLANNED = "PLANNED"
    SUCCESSFUL = "SUCCESSFUL"
    FAILED = "FAILED"
    PARTIAL = "PARTIAL"
    UNPLANNED = "UNPLANNED"
    UNKNOWN = "UNKNOWN"


class EntityChangeType(str, Enum):
    ADD = "ADD"
    CHANGE = "CHANGE"
    DELETE = "DELETE"
    RECREATE = "RECREATE"
    MOVE = "MOVE"
    REPLACE_CREATE_BEFORE_DESTROY = "REPLACE_CREATE_BEFORE_DESTROY"
    REPLACE_DESTROY_BEFORE_CREATE = "REPLACE_DESTROY_BEFORE_CREATE"
    NOOP = "NOOP"
    READ = "READ"
    IMPORT = "IMPORT"


class GitHubAppStatus(str, Enum):
    OK = "OK"
    APP_NOT_FOUND = "APP_NOT_FOUND"
    VCS_AGENT_POOL_NOT_FOUND = "VCS_AGENT_POOL_NOT_FOUND"
    ERROR = "ERROR"


class IdentityProvider(str, Enum):
    UNKNOWN = "UNKNOWN"
    GITHUB = "GITHUB"
    GOOGLE = "GOOGLE"
    GITLAB = "GITLAB"
    MICROSOFT = "MICROSOFT"
    OIDC = "OIDC"
    SAML = "SAML"


class KubernetesWorkflowTool(str, Enum):
    KUBERNETES = "KUBERNETES"
    CUSTOM = "CUSTOM"


class ManagedUserGroupIntegrationType(str, Enum):
    SLACK = "SLACK"


class NotificationSeverity(str, Enum):
    INFO = "INFO"
    WARNING = "WARNING"
    ERROR = "ERROR"


class NotificationType(str, Enum):
    AWS_INTEGRATION = "AWS_INTEGRATION"
    POLICY = "POLICY"
    STACK = "STACK"
    WORKER_POOL = "WORKER_POOL"
    ACCOUNT = "ACCOUNT"


class PolicyType(str, Enum):
    ACCESS = "ACCESS"
    LOGIN = "LOGIN"
    STACK_ACCESS = "STACK_ACCESS"
    GIT_PUSH = "GIT_PUSH"
    INITIALIZATION = "INITIALIZATION"
    PLAN = "PLAN"
    TASK = "TASK"
    TASK_RUN = "TASK_RUN"
    TERRAFORM_PLAN = "TERRAFORM_PLAN"
    TRIGGER = "TRIGGER"
    APPROVAL = "APPROVAL"
    NOTIFICATION = "NOTIFICATION"


class RunExternalDependencyStatus(str, Enum):
    PENDING = "PENDING"
    FINISHED = "FINISHED"
    FAILED = "FAILED"


class RunReviewDecision(str, Enum):
    APPROVE = "APPROVE"
    REJECT = "REJECT"


class RunState(str, Enum):
    UNKNOWN = "UNKNOWN"
    QUEUED = "QUEUED"
    CANCELED = "CANCELED"
    INITIALIZING = "INITIALIZING"
    PLANNING = "PLANNING"
    FAILED = "FAILED"
    FINISHED = "FINISHED"
    UNCONFIRMED = "UNCONFIRMED"
    DISCARDED = "DISCARDED"
    CONFIRMED = "CONFIRMED"
    APPLYING = "APPLYING"
    PERFORMING = "PERFORMING"
    STOPPED = "STOPPED"
    DESTROYING = "DESTROYING"
    PREPARING = "PREPARING"
    PREPARING_APPLY = "PREPARING_APPLY"
    SKIPPED = "SKIPPED"
    REPLAN_REQUESTED = "REPLAN_REQUESTED"
    PENDING = "PENDING"
    PREPARING_REPLAN = "PREPARING_REPLAN"
    READY = "READY"
    PENDING_REVIEW = "PENDING_REVIEW"


class RunType(str, Enum):
    UNKNOWN = "UNKNOWN"
    PROPOSED = "PROPOSED"
    TRACKED = "TRACKED"
    TASK = "TASK"
    TESTING = "TESTING"
    DESTROY = "DESTROY"
    PARSE = "PARSE"


class SAMLNameIDFormat(str, Enum):
    TRANSIENT = "TRANSIENT"
    EMAIL_ADDRESS = "EMAIL_ADDRESS"
    PERSISTENT = "PERSISTENT"


class SearchQueryFieldConstraintTimeInLast(str, Enum):
    LAST15M = "LAST15M"
    LAST30M = "LAST30M"
    LAST1H = "LAST1H"
    LAST4H = "LAST4H"
    LAST1D = "LAST1D"
    LAST7D = "LAST7D"
    LAST14D = "LAST14D"


class SearchQueryOrderDirection(str, Enum):
    ASC = "ASC"
    DESC = "DESC"


class SearchSuggestionsFieldType(str, Enum):
    BOOLEAN = "BOOLEAN"
    ENUM = "ENUM"
    STRING = "STRING"
    HIERARCHY = "HIERARCHY"
    TIME = "TIME"


class SpaceAccessLevel(str, Enum):
    NONE = "NONE"
    READ = "READ"
    WRITE = "WRITE"
    ADMIN = "ADMIN"


class StackState(str, Enum):
    NONE = "NONE"
    INITIALIZING = "INITIALIZING"
    PLANNING = "PLANNING"
    FAILED = "FAILED"
    FINISHED = "FINISHED"
    UNCONFIRMED = "UNCONFIRMED"
    DISCARDED = "DISCARDED"
    CONFIRMED = "CONFIRMED"
    APPLYING = "APPLYING"
    STOPPED = "STOPPED"
    DESTROYING = "DESTROYING"
    PREPARING = "PREPARING"
    PREPARING_APPLY = "PREPARING_APPLY"
    REPLAN_REQUESTED = "REPLAN_REQUESTED"
    PREPARING_REPLAN = "PREPARING_REPLAN"


class TerraformProviderVersionStatus(str, Enum):
    DRAFT = "DRAFT"
    PUBLISHED = "PUBLISHED"
    REVOKED = "REVOKED"


class TerraformWorkflowTool(str, Enum):
    TERRAFORM_FOSS = "TERRAFORM_FOSS"
    CUSTOM = "CUSTOM"
    OPEN_TOFU = "OPEN_TOFU"


class TerragruntTool(str, Enum):
    TERRAFORM_FOSS = "TERRAFORM_FOSS"
    OPEN_TOFU = "OPEN_TOFU"
    MANUALLY_PROVISIONED = "MANUALLY_PROVISIONED"


class UserGroupStatus(str, Enum):
    ACTIVE = "ACTIVE"
    INACTIVE = "INACTIVE"


class UserRole(str, Enum):
    USER = "USER"
    ADMIN = "ADMIN"
    OWNER = "OWNER"


class UserStatus(str, Enum):
    QUEUED = "QUEUED"
    PENDING = "PENDING"
    ACTIVE = "ACTIVE"
    INACTIVE = "INACTIVE"


class VCSProvider(str, Enum):
    BITBUCKET_CLOUD = "BITBUCKET_CLOUD"
    BITBUCKET_DATACENTER = "BITBUCKET_DATACENTER"
    GITHUB = "GITHUB"
    GITLAB = "GITLAB"
    GITHUB_ENTERPRISE = "GITHUB_ENTERPRISE"
    SHOWCASE = "SHOWCASE"
    AZURE_DEVOPS = "AZURE_DEVOPS"
    GIT = "GIT"


class VersionState(str, Enum):
    ACTIVE = "ACTIVE"
    PENDING = "PENDING"
    FAILED = "FAILED"


class WorkerStatus(str, Enum):
    IDLE = "IDLE"
    BUSY = "BUSY"
    DRAINED = "DRAINED"
